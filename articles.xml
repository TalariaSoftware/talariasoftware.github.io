<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/articles.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-02-17T13:18:36-08:00</updated><id>/articles.xml</id><title type="html">Talaria Software</title><subtitle>Software is a means to an end. Your real goals are to delight your customers, grow your business, and make people's lives better. Building software is only valuable when it helps you do those things.</subtitle><entry><title type="html">Add a CSS Framework</title><link href="/articles/add_a_css_framework" rel="alternate" type="text/html" title="Add a CSS Framework" /><published>2021-02-16T00:00:00-08:00</published><updated>2021-02-16T00:00:00-08:00</updated><id>/articles/add_a_css_framework</id><content type="html" xml:base="/articles/add_a_css_framework">&lt;p&gt;This is part of &lt;a href=&quot;/articles/joyful_rails&quot;&gt;Joyful Rails&lt;/a&gt;, a list of
recommendations to make developing your Rails app more productive and joyful.&lt;/p&gt;

&lt;p&gt;In this article, we are talking about adding a CSS framework.&lt;/p&gt;

&lt;h2 id=&quot;when&quot;&gt;When&lt;/h2&gt;

&lt;p&gt;When it comes time to make things pretty, use a good CSS framework to make that
easier.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;CSS frameworks exist for the same reasons Rails does. They make a lot of the
decisions for you and give you pre-built components that you can combine and
customize to make your app.&lt;/p&gt;

&lt;h2 id=&quot;options&quot;&gt;Options&lt;/h2&gt;

&lt;h3 id=&quot;bulma&quot;&gt;Bulma&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://bulma.io&quot;&gt;Bulma&lt;/a&gt; is good and doesn’t require any JavaScript.&lt;/p&gt;

&lt;p&gt;Many CSS frameworks depend on JavaScript for basic functionality so they make
your application completely unusable when the user does not have Javascript,
when there is an issue downloading the JavaScript, or when there is a bug in the
Javascript. Bulma has no JavaScript so it does not have that problem.&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&quot;https://bulma.io/documentation/overview/start/&quot;&gt;install&lt;/a&gt; it as an NPM
package, load it remotely, download and use the compiled CSS, or download and
use the source Sass. (That last option is unsupported.)&lt;/p&gt;

&lt;h2 id=&quot;us-web-design-system&quot;&gt;US Web Design System&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://designsystem.digital.gov&quot;&gt;The US Web Design System&lt;/a&gt; is beautiful,
authoritative, completely accessible, and works with or without Javascript.&lt;/p&gt;

&lt;p&gt;Because USWDS was built for Federal agencies, it has extremely high standards for
accessibility. It is highly themeable but still tends towards a very formal,
authoritative look.&lt;/p&gt;

&lt;p&gt;It can be
&lt;a href=&quot;https://designsystem.digital.gov/documentation/developers/&quot;&gt;installed&lt;/a&gt; as an
NPM package or as a source code download. There are several third party
distributions but none suitable for a Rails application. I advise using the NPM
package with Yarn.&lt;/p&gt;

&lt;h2 id=&quot;zurb-foundation&quot;&gt;Zurb Foundation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://get.foundation&quot;&gt;Foundation&lt;/a&gt; is very nice.&lt;/p&gt;

&lt;p&gt;It can be &lt;a href=&quot;https://get.foundation/sites/docs/installation.html&quot;&gt;installed&lt;/a&gt; in
many different ways. However, currently the Rails gem
&lt;a href=&quot;https://github.com/foundation/foundation-rails&quot;&gt;foundation-rails&lt;/a&gt; has an &lt;a href=&quot;https://github.com/foundation/foundation-rails/issues/281&quot;&gt;issue with Rails 6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The workaround appears to include:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;installing Coffeescript for the duration of the install process.&lt;/li&gt;
  &lt;li&gt;commenting out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@include foundation-button-group;&lt;/code&gt; in
  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/assets/stylesheets/foundation_and_overrides.scss&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="software" /><category term="rails" /><category term="joyful_rails" /><summary type="html">This is part of Joyful Rails, a list of recommendations to make developing your Rails app more productive and joyful.</summary></entry><entry><title type="html">Add an Authorization Library</title><link href="/articles/add_an_authorization_library" rel="alternate" type="text/html" title="Add an Authorization Library" /><published>2021-02-09T00:00:00-08:00</published><updated>2021-02-09T00:00:00-08:00</updated><id>/articles/add_an_authorization_library</id><content type="html" xml:base="/articles/add_an_authorization_library">&lt;p&gt;This is part of &lt;a href=&quot;/articles/joyful_rails&quot;&gt;Joyful Rails&lt;/a&gt;, a list of
recommendations to make developing your Rails app more productive and joyful.&lt;/p&gt;

&lt;p&gt;In this article, we are talking about adding an authorization library.&lt;/p&gt;

&lt;h2 id=&quot;when&quot;&gt;When&lt;/h2&gt;

&lt;p&gt;After you add &lt;a href=&quot;add_authentication&quot;&gt;authentication&lt;/a&gt; to your application, you will
probably start writing code that does different things depending on who the user
is.&lt;/p&gt;

&lt;p&gt;That is a good time to add an authorization library to make creating, testing,
and maintaining that code much easier.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;If have user authentication, your app knows who its users are. That’s great!&lt;/p&gt;

&lt;p&gt;But you probably wanted to know who the users are so that you can allow them to
do different things.&lt;/p&gt;

&lt;p&gt;Determining what a user can do is the process of authorization.&lt;/p&gt;

&lt;p&gt;What usually happens is you end up with code that looks like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;present?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;author&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_body&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is tricky to write, tricky to test, and ends up spread all over your app.&lt;/p&gt;

&lt;p&gt;An authentication library helps you put that code all in one place, making it
easy to understand, test, and maintain.&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;

&lt;p&gt;Use &lt;a href=&quot;https://github.com/varvet/pundit#readme&quot;&gt;Pundit&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;alternatives&quot;&gt;Alternatives&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryanb/cancan#readme&quot;&gt;Cancan&lt;/a&gt; is another option and I am sure
there are many more. I like Pundit enough that I haven’t explored any
others.&lt;/p&gt;</content><author><name></name></author><category term="software" /><category term="rails" /><category term="joyful_rails" /><summary type="html">This is part of Joyful Rails, a list of recommendations to make developing your Rails app more productive and joyful.</summary></entry><entry><title type="html">“How are you doing?” with Mando Escamilla</title><link href="/articles/how_are_you_doing_with_mando_escamilla" rel="alternate" type="text/html" title="“How are you doing?” with Mando Escamilla" /><published>2021-02-04T00:00:00-08:00</published><updated>2021-02-04T00:00:00-08:00</updated><id>/articles/how_are_you_doing_with_mando_escamilla</id><content type="html" xml:base="/articles/how_are_you_doing_with_mando_escamilla">&lt;p&gt;I was one of the hosts lucky enough to welcome the lovely Mando Escamilla to the
Greater than Code podcast &lt;a href=&quot;https://www.greaterthancode.com/how-are-you-doing&quot;&gt;episode 219&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mando’s superpower is the ability to talk about anything personal with other
people. He got it during a difficult time in his life when he suddenly could no
longer bottle up his feelings.&lt;/p&gt;

&lt;p&gt;We discussed how we are all managing the difficult and traumatic time we are
going through as a society, how we feel about it, and what to do about it.&lt;/p&gt;

&lt;iframe src=&quot;https://player.fireside.fm/v2/nERs6yQ-+0NcwU7Ey?theme=dark&quot; width=&quot;740&quot; height=&quot;200&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You can hear more from Mando by &lt;a href=&quot;https://twitter.com/mandoescamilla&quot;&gt;finding him on Twitter.&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="greater_than_code" /><summary type="html">I was one of the hosts lucky enough to welcome the lovely Mando Escamilla to the Greater than Code podcast episode 219.</summary></entry><entry><title type="html">Add Authentication</title><link href="/articles/add_authentication" rel="alternate" type="text/html" title="Add Authentication" /><published>2021-02-02T00:00:00-08:00</published><updated>2021-02-02T00:00:00-08:00</updated><id>/articles/add_authentication</id><content type="html" xml:base="/articles/add_authentication">&lt;p&gt;This is part of &lt;a href=&quot;/articles/joyful_rails&quot;&gt;Joyful Rails&lt;/a&gt;, a list of
recommendations to make developing your Rails app more productive and joyful.&lt;/p&gt;

&lt;p&gt;In this article, we are talking about adding authentication.&lt;/p&gt;

&lt;h2 id=&quot;when&quot;&gt;When&lt;/h2&gt;

&lt;p&gt;Authentication is the process of identifying who your user is. You should add it
as soon as your app needs to know who its users are.&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;

&lt;p&gt;Use &lt;a href=&quot;https://github.com/heartcombo/devise#getting-started&quot;&gt;Devise&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;gotchas&quot;&gt;Gotchas&lt;/h2&gt;

&lt;p&gt;Authentication is separate from authorization. We’ll talk about authorization in
a separate article.&lt;/p&gt;</content><author><name></name></author><category term="software" /><category term="rails" /><category term="joyful_rails" /><summary type="html">This is part of Joyful Rails, a list of recommendations to make developing your Rails app more productive and joyful.</summary></entry><entry><title type="html">Update the Readme</title><link href="/articles/update_the_readme" rel="alternate" type="text/html" title="Update the Readme" /><published>2021-01-26T00:00:00-08:00</published><updated>2021-01-26T00:00:00-08:00</updated><id>/articles/update_the_readme</id><content type="html" xml:base="/articles/update_the_readme">&lt;p&gt;This is part of &lt;a href=&quot;/articles/joyful_rails&quot;&gt;Joyful Rails&lt;/a&gt;, a list of
recommendations to make developing your Rails app more productive and joyful.&lt;/p&gt;

&lt;p&gt;In this article, we are talking about updating the readme file.&lt;/p&gt;

&lt;h2 id=&quot;when&quot;&gt;When&lt;/h2&gt;

&lt;p&gt;Every time there is some new piece of information that every developer will
need, or that is not obvious or easy to find, add that to the “readme” file.&lt;/p&gt;

&lt;p&gt;Setting up a new development machine or onboarding a new developer is a great
time to overhaul your readme file. Change anything that is incorrect, unclear,
or missing.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;Opening an unfamiliar codebase can be very intimidating. A readme file gives
future developers a way to get their bearings. It can’t tell you where
everything is, but it can let you know where to start looking – and that is huge.&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;

&lt;p&gt;Your readme file should probably include the name of the app, what it does, how
to set up your development environment, how to run the tests, how to deploy, and any other information a new developer is likely to need.&lt;/p&gt;

&lt;p&gt;This should go into a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is an example readme file:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Hello World&lt;/span&gt;

Universal greeter for all human and non-human entities

&lt;span class=&quot;gu&quot;&gt;## Development&lt;/span&gt;

Instructions on how to develop go here

&lt;span class=&quot;gu&quot;&gt;### Specs&lt;/span&gt;

&lt;span class=&quot;sb&quot;&gt;`rake`&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;### Deployment&lt;/span&gt;

&lt;span class=&quot;sb&quot;&gt;`bin/deploy`&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;### Updating libraries&lt;/span&gt;

&lt;span class=&quot;sb&quot;&gt;`bin/gem_update`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;alternatives&quot;&gt;Alternatives&lt;/h2&gt;

&lt;p&gt;In the long ago time, readme files were named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.txt&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README&lt;/code&gt; or
occasionally &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Readme&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The all caps version of the file name makes it very easy to notice in a file
listing.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.md&lt;/code&gt; extension indicates that the file is Markdown so it gets rendered
nicely in GitHub and elsewhere.&lt;/p&gt;</content><author><name></name></author><category term="software" /><category term="rails" /><category term="joyful_rails" /><summary type="html">This is part of Joyful Rails, a list of recommendations to make developing your Rails app more productive and joyful.</summary></entry><entry><title type="html">Robot and Human Collaboration with Julie Shah</title><link href="/articles/robot_and_human_collaboration_with_julie_shah" rel="alternate" type="text/html" title="Robot and Human Collaboration with Julie Shah" /><published>2021-01-21T00:00:00-08:00</published><updated>2021-01-21T00:00:00-08:00</updated><id>/articles/robot_and_human_collaboration_with_julie_shah</id><content type="html" xml:base="/articles/robot_and_human_collaboration_with_julie_shah">&lt;p&gt;I was one of the hosts lucky enough to welcome the insightful Julie Shah to the
Greater than Code podcast &lt;a href=&quot;https://www.greaterthancode.com/robot-and-human-collaboration&quot;&gt;episode 216&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Prof. Shah directs the Interactive Robotics Group in the Schwarzman College of
Computing at MIT and is an associate dean of social implications and
responsibilities of computing.&lt;/p&gt;

&lt;p&gt;We discussed some of the subjects in her new book &lt;a href=&quot;https://www.amazon.com/What-Expect-Youre-Expecting-Robots/dp/1541699114&quot;&gt;“What To Expect When You’re
Expecting
Robots”&lt;/a&gt;
including how and when to structure the world for machines and the interactions
between humans and machines in public spaces.&lt;/p&gt;

&lt;iframe src=&quot;https://player.fireside.fm/v2/nERs6yQ-+cbykvRtV?theme=dark&quot; width=&quot;740&quot; height=&quot;200&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You can find out more about Prof. Shah from her &lt;a href=&quot;https://interactive.mit.edu&quot;&gt;lab’s
website&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="greater_than_code" /><summary type="html">I was one of the hosts lucky enough to welcome the insightful Julie Shah to the Greater than Code podcast episode 216.</summary></entry><entry><title type="html">The Righteous Mind with Rylan Bowers</title><link href="/articles/the_righteous_mind_with_rylan_bowers" rel="alternate" type="text/html" title="The Righteous Mind with Rylan Bowers" /><published>2021-01-14T00:00:00-08:00</published><updated>2021-01-14T00:00:00-08:00</updated><id>/articles/the_righteous_mind_with_rylan_bowers</id><content type="html" xml:base="/articles/the_righteous_mind_with_rylan_bowers">&lt;p&gt;I was one of the hosts lucky enough to welcome the lovely Ryan Bowers to the
Greater than Code podcast &lt;a href=&quot;https://www.greaterthancode.com/the-righteous-mind&quot;&gt;episode 214&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We discussed &lt;a href=&quot;https://righteousmind.com&quot;&gt;“The Righteous Mind”&lt;/a&gt; by Jonathan Haidt
and dug into the nature and origin of morality and moral decision making. This
was my first introduction to the individual-on-an-elephant metaphor which I am
sure I will be using extensively.&lt;/p&gt;

&lt;iframe src=&quot;https://player.fireside.fm/v2/nERs6yQ-+IC-GEYVh?theme=dark&quot; width=&quot;740&quot; height=&quot;200&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You can find out more about Rylan from his &lt;a href=&quot;https://rylanbowers.com&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="greater_than_code" /><summary type="html">I was one of the hosts lucky enough to welcome the lovely Ryan Bowers to the Greater than Code podcast episode 214.</summary></entry><entry><title type="html">Investigation and Influence with Chelsea Troy</title><link href="/articles/investigation_and_influence_with_chelsea_troy" rel="alternate" type="text/html" title="Investigation and Influence with Chelsea Troy" /><published>2021-01-07T00:00:00-08:00</published><updated>2021-01-07T00:00:00-08:00</updated><id>/articles/investigation_and_influence_with_chelsea_troy</id><content type="html" xml:base="/articles/investigation_and_influence_with_chelsea_troy">&lt;p&gt;I was one of the hosts lucky enough to welcome the amazing Chelsea Troy to the
Greater than Code podcast &lt;a href=&quot;https://www.greaterthancode.com/investigation-and-influence&quot;&gt;episode 207&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We talked about software detective work and then went deep into practical
considerations for living our values and making an impact as technologists and
engineers. There are even a few tidbits on fallibility and Lucifer (the TV
series).&lt;/p&gt;

&lt;iframe src=&quot;https://player.fireside.fm/v2/nERs6yQ-+qbEU9b2g&quot; width=&quot;740&quot; height=&quot;200&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You can find more about Chelsea from her &lt;a href=&quot;https://chelseatroy.com&quot;&gt;website&lt;/a&gt; or
listen to &lt;a href=&quot;https://www.greaterthancode.com/guests/chelsea-troy&quot;&gt;all of her
appearances&lt;/a&gt; on Greater
than Code.&lt;/p&gt;</content><author><name></name></author><category term="greater_than_code" /><summary type="html">I was one of the hosts lucky enough to welcome the amazing Chelsea Troy to the Greater than Code podcast episode 207.</summary></entry><entry><title type="html">Set Up a Production Environment</title><link href="/articles/set_up_a_production_environment" rel="alternate" type="text/html" title="Set Up a Production Environment" /><published>2021-01-05T00:00:00-08:00</published><updated>2021-01-05T00:00:00-08:00</updated><id>/articles/set_up_a_production_environment</id><content type="html" xml:base="/articles/set_up_a_production_environment">&lt;p&gt;This is part of &lt;a href=&quot;/articles/joyful_rails&quot;&gt;Joyful Rails&lt;/a&gt;, a list of
recommendations to make developing your Rails app more productive and joyful.&lt;/p&gt;

&lt;p&gt;In this article, we are talking about setting up a production environment.&lt;/p&gt;

&lt;h2 id=&quot;when&quot;&gt;When&lt;/h2&gt;

&lt;p&gt;In the interest of rapid user feedback and iteration, I recommend doing this as
soon as possible.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;A production environment makes your app available to people who aren’t using
your development machine.&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dashboard.heroku.com/new-app&quot;&gt;Create a Heroku app&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;alternatives&quot;&gt;Alternatives&lt;/h2&gt;

&lt;p&gt;Almost every web hosting company can deploy Rails apps. Some can be cheaper than
Heroku in certain scenarios. None that I know of are easier to start with.&lt;/p&gt;

&lt;p&gt;Heroku is incredibly easy to use and can be used for free to start. I recommend
starting with it.&lt;/p&gt;</content><author><name></name></author><category term="software" /><category term="rails" /><category term="joyful_rails" /><summary type="html">This is part of Joyful Rails, a list of recommendations to make developing your Rails app more productive and joyful.</summary></entry><entry><title type="html">Default Rake Task</title><link href="/articles/default_rake_task" rel="alternate" type="text/html" title="Default Rake Task" /><published>2020-12-29T00:00:00-08:00</published><updated>2020-12-29T00:00:00-08:00</updated><id>/articles/default_rake_task</id><content type="html" xml:base="/articles/default_rake_task">&lt;p&gt;This is part of &lt;a href=&quot;/articles/joyful_rails&quot;&gt;Joyful Rails&lt;/a&gt;, a list of
recommendations to make developing your Rails app more productive and joyful.&lt;/p&gt;

&lt;p&gt;In this article, we are talking about adding to the default rake task.&lt;/p&gt;

&lt;h2 id=&quot;when&quot;&gt;When&lt;/h2&gt;

&lt;p&gt;I recommend adding to the default rake task every time you add a tool that
automatically checks your codebase.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;Having a single command to run all of your automated checks and specs makes it
easy to run them after every change and before every deploy.&lt;/p&gt;

&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;

&lt;p&gt;First, create Rake tasks for automated checkers that do not have one.&lt;/p&gt;

&lt;h3 id=&quot;rubocop&quot;&gt;Rubocop&lt;/h3&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/tasks/rubocop.rake&lt;/code&gt; put&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Specification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_all_by_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rubocop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;present?&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rubocop/rake_task'&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;RuboCop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RakeTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake rubocop&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;bundler-audit&quot;&gt;Bundler audit&lt;/h3&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/tasks/bundler_audit.rake&lt;/code&gt; put&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Specification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_all_by_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bundler-audit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;present?&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bundler/audit/task'&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Audit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake bundle:audit&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;license-finder&quot;&gt;License Finder&lt;/h3&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/tasks/license_finder.rake&lt;/code&gt; put&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;license_finder: :environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'license_finder'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'--quiet'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake license_finder&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;rails-best-practices&quot;&gt;Rails Best Practices&lt;/h3&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/tasks/rails_best_practices.rake&lt;/code&gt; put&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;rails_best_practices: :environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rails_best_practices'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake rails_best_practices&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;brakeman&quot;&gt;Brakeman&lt;/h3&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/tasks/brakeman.rake&lt;/code&gt; put&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Specification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_all_by_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'brakeman'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;present?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:brakeman&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Check your code with Brakeman&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;check: :environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'brakeman'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Brakeman&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;app_path: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;print_report: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;pager: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Brakeman&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Warnings_Found_Exit_Code&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filtered_warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake brakeman:check&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;default-rake-task&quot;&gt;Default rake task&lt;/h3&gt;

&lt;p&gt;Edit your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Rakefile&lt;/code&gt; define the default rake task.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%i[
  rubocop
  spec
  rails_best_practices
  license_finder
  brakeman:check
  bundle:audit
]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To run the default task with all of your automated checks and specs use this
command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt;.&lt;/p&gt;</content><author><name></name></author><category term="software" /><category term="rails" /><category term="joyful_rails" /><summary type="html">This is part of Joyful Rails, a list of recommendations to make developing your Rails app more productive and joyful.</summary></entry></feed>